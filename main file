#include"Header.h"

int main(int argc, char* argv[])
{
	char* path = "a.png";
	cv::Mat src = getImage(path);
	
	cv::Mat blur1 = edgeDetected(src);
	cv::Mat mask = HGCircle(blur1, src);
	//cv::imshow("mask", mask );
		
	cv::Mat cropImage;
	src.copyTo(cropImage, mask);
	//cv::imshow("crop", cropImage );

	cv::Mat sector1 = Sector(src);
	cv::Mat cropImage1;
	sector1.copyTo(cropImage1, mask);
	//cv::imshow("crop1", cropImage1 );

	
	cv::Mat dst1 = edgeDetected1(cropImage);
	cv::Mat cdst1 = edgeDetected2(cropImage);
	//cv::imshow("A", dst1 );
	//cv::imshow("B", cdst1 );
	cv::Mat lineDetected  = HGline(dst1, cropImage1);
	cv::imshow("final", lineDetected);
	Point pt1;
	pt1.x=313;
	pt1.y=329;
	Point pt2;
	pt2.x=324;
	pt2.y=229;
	Point pt6;
	pt6.x=434;
	pt6.y=232;
	cv::Mat angle=Angle(mask, pt1, pt2, pt6);
	imshow("angle", angle);
    

	/*finding angle at 12
	int angle1=-90;
    int length=150;
	Point r;
	r.x= (pt2.x + length*cos(angle1*CV_PI/180.0));
    r.y= (pt2.y + length*sin(angle1*CV_PI/180.0));
    line( angle, pt2, r, Scalar(0,255,0), 1, 8, 0);
	cv::imshow("R", angle);*/

	TimeDetectionhrs(angle, pt1, pt2, pt6);
	TimeDetectionmins(angle, pt1, pt2, pt6);
	
	
	
	
    waitKey(0);                                                

return 0;



	
}






